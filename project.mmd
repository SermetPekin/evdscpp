```mermaid
classDiagram
    class DataFrame {
        +unordered_map~string, Column~ columns
        +get_column_names() std::vector~string~
        +add_value(string column_name, Cell value)
        +add_value_with_alignment(string column_name, std::vector~size_t~ indices, std::vector~Cell~ values)
        +std::optional~std::vector~T~~~ values(string column_name)
        +Series operator[](string column_name)
        +void to_excel(T file_name)
        +void show()
        +void print()
        -void m_save_as_excel(string file_name)
        -void m_save_as_excel(char* file_name)
    }

    class Column {
        +std::vector~Cell~ data
        +void push_back(Cell value)
        +void resize(size_t new_size, Cell fill_value)
    }

    class Series {
        -ColumnData data_
        +Series(ColumnData data)
        +size_t size()
        +std::vector~T~ values2() const
        +T at(size_t index) const
        +void print() const
    }

    class Cell {
        <<Variant>>
        +std::monostate
        +double
        +long long
        +string
    }

    class DataFrame
    DataFrame --* Column : has many
    Column --* Cell : contains
    DataFrame --> Series : returns
    Series --|> DataFrame : associated with

    class JSONParser {
        +void parse_json_line(const nlohmann::json& j, DataFrame& df)
        +void parse_json_line(const std::string& line, DataFrame& df)
    }
    JSONParser --* DataFrame : fills
    JSONParser ..> Cell : uses

    class ExcelExporter {
        +void save_as_excel(const DataFrame& df, const std::string& filename)
    }
    ExcelExporter --* DataFrame : exports

```

